Domain(dim=3,kind='structured') :: Omega
Space(domain=Omega,kind='h1')   :: V
Field(space=V)                  :: phi 
Function(x,y,z)                 :: f 
Real                            :: alpha 
Real                            :: beta 

b(v::V) := < f * v >_Omega 

a_11(v1::V, u1::V) := < beta * dx(u1) * dx(v1) + alpha * dy(u1) * dy(v1) + alpha * dz(u1) * dz(v1) >_Omega
a_12(v1::V, u2::V) := < beta * dy(u2) * dx(v1) - alpha * dx(u2) * dy(v1) >_Omega
a_13(v1::V, u3::V) := < beta * dz(u3) * dx(v1) - alpha * dx(u3) * dz(v1) >_Omega

a_21(v2::V, u1::V) := < beta * dx(u1) * dy(v2) - alpha * dy(u1) * dx(v2) >_Omega
a_22(v2::V, u2::V) := < beta * dy(u2) * dy(v2) + alpha * dx(u2) * dx(v2) + alpha * dz(u2) * dz(v2) >_Omega
a_23(v2::V, u3::V) := < beta * dz(u3) * dy(v2) - alpha * dy(u3) * dz(v2) >_Omega

a_31(v3::V, u1::V) := < beta * dx(u1) * dz(v3) - alpha * dz(u1) * dx(v3) >_Omega
a_32(v3::V, u2::V) := < beta * dy(u2) * dz(v3) - alpha * dz(u2) * dy(v3) >_Omega
a_33(v3::V, u3::V) := < beta * dz(u3) * dz(v3) + alpha * dx(u3) * dx(v3) + alpha * dy(u3) * dy(v3) >_Omega


a((v1,v2,v3) :: V,(u1,u2,u3) :: V) := a_11(v1,u1) + a_12(v1,u2) + a_13(v1,u3) + a_21(v2,u1) + a_22(v2,u2) + a_23(v2,u3) + a_31(v3,u1) + a_32(v3,u2) + a_33(v3,u3) 
